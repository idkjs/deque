// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var List = require("../src/List.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Deque = require("../src/deque.bs.js");
var Random = require("bs-platform/lib/js/random.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Deckrev_internal = require("../src/deckrev_internal.bs.js");

function $at(a, b) {
  return {
          TAG: /* Interleave */1,
          _0: a,
          _1: b
        };
}

function $$return(x) {
  return {
          TAG: /* Yield */0,
          _0: x,
          _1: (function (param) {
              return /* Done */0;
            })
        };
}

function $great$great$eq(m, f) {
  return {
          TAG: /* Bind */3,
          _0: m,
          _1: f
        };
}

function map(f, m) {
  return {
          TAG: /* Bind */3,
          _0: m,
          _1: (function (x) {
              var x$1 = Curry._1(f, x);
              return {
                      TAG: /* Yield */0,
                      _0: x$1,
                      _1: (function (param) {
                          return /* Done */0;
                        })
                    };
            })
        };
}

var $less$$great = map;

function $less$star$great(f, x) {
  return {
          TAG: /* Bind */3,
          _0: f,
          _1: (function (f) {
              return map(f, x);
            })
        };
}

function of_list(lst) {
  if (!lst) {
    return /* Done */0;
  }
  var xs = lst.tl;
  return {
          TAG: /* Yield */0,
          _0: lst.hd,
          _1: (function (param) {
              return of_list(xs);
            })
        };
}

function force1(_m) {
  while(true) {
    var m = _m;
    if (typeof m === "number") {
      return ;
    }
    switch (m.TAG | 0) {
      case /* Yield */0 :
          return Caml_option.some(m._0);
      case /* Interleave */1 :
          var x = force1(m._0);
          if (x !== undefined) {
            return Caml_option.some(Caml_option.valFromOption(x));
          }
          _m = m._1;
          continue ;
      case /* Bind */3 :
          var x$1 = force1(m._0);
          if (x$1 === undefined) {
            return ;
          }
          _m = Curry._1(m._1, Caml_option.valFromOption(x$1));
          continue ;
      case /* Nest */2 :
      case /* Delay */4 :
          _m = Curry._1(m._0, undefined);
          continue ;
      
    }
  };
}

function iteri(_count, _f, _d, _xs) {
  while(true) {
    var xs = _xs;
    var d = _d;
    var f = _f;
    var count = _count;
    if (typeof xs === "number") {
      return count;
    }
    switch (xs.TAG | 0) {
      case /* Yield */0 :
          var count$1 = Curry._2(f, count, xs._0);
          _xs = Curry._1(xs._1, undefined);
          _count = count$1 + 1 | 0;
          continue ;
      case /* Interleave */1 :
          var b = xs._1;
          var a = xs._0;
          var match = Random.bool(undefined) ? [
              a,
              b
            ] : [
              b,
              a
            ];
          var count$2 = iteri(count, f, d, match[0]);
          _xs = match[1];
          _count = count$2;
          continue ;
      case /* Nest */2 :
          var m = xs._0;
          if (d <= 0) {
            var x = force1(Curry._1(m, undefined));
            if (x !== undefined) {
              return Curry._2(f, count, Caml_option.valFromOption(x));
            } else {
              return count;
            }
          }
          _xs = Curry._1(m, undefined);
          _d = d - 1 | 0;
          continue ;
      case /* Bind */3 :
          var g = xs._1;
          _xs = xs._0;
          _f = (function(f,d,g){
          return function (count, x) {
            return iteri(count, f, d, Curry._1(g, x));
          }
          }(f,d,g));
          continue ;
      case /* Delay */4 :
          _xs = Curry._1(xs._0, undefined);
          continue ;
      
    }
  };
}

function iteri$1(f, d, xs) {
  return iteri(0, f, d, xs);
}

function list_gen(size, m) {
  if (size <= 0) {
    return {
            TAG: /* Yield */0,
            _0: /* [] */0,
            _1: (function (param) {
                return /* Done */0;
              })
          };
  }
  var rest = list_gen(size - 1 | 0, m);
  return {
          TAG: /* Bind */3,
          _0: m,
          _1: (function (x) {
              return {
                      TAG: /* Bind */3,
                      _0: rest,
                      _1: (function (xs) {
                          return {
                                  TAG: /* Yield */0,
                                  _0: {
                                    hd: {
                                      TAG: /* L2R */0,
                                      _0: x
                                    },
                                    tl: xs
                                  },
                                  _1: (function (param) {
                                      return /* Done */0;
                                    })
                                };
                        })
                    };
            })
        };
}

function buffer_make(e, size) {
  return map(Deque.Dequeue.of_list, list_gen(size, e));
}

function sample(param) {
  if (param) {
    var xs = param.tl;
    var x = param.hd;
    if (xs && Random.bool(undefined)) {
      return {
              hd: x,
              tl: {
                hd: List.nth(xs, Random.$$int(List.length(xs))),
                tl: /* [] */0
              }
            };
    } else {
      return {
              hd: x,
              tl: /* [] */0
            };
    }
  }
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "deckrev_test.re",
          87,
          10
        ],
        Error: new Error()
      };
}

function buffer_ge8(e) {
  return buffer_make(e, 8 + Random.$$int(6) | 0);
}

function buffer_ge7(e) {
  return buffer_make(e, 7 + Random.$$int(6) | 0);
}

function buffer_ge6(e) {
  return buffer_make(e, 6 + Random.$$int(6) | 0);
}

function buffer_ge5(e) {
  return buffer_make(e, 5 + Random.$$int(6) | 0);
}

function buffer_ge3(e) {
  return buffer_make(e, 3 + Random.$$int(6) | 0);
}

function buffer_eq2(e) {
  return buffer_make(e, 2);
}

function buffer_ge1(e) {
  return buffer_make(e, 1 + Random.$$int(6) | 0);
}

function stored_triple(e) {
  if (Random.bool(undefined)) {
    return {
            TAG: /* Nest */2,
            _0: (function (param) {
                return {
                        TAG: /* Interleave */1,
                        _0: {
                          TAG: /* Bind */3,
                          _0: buffer_ge3(e),
                          _1: (function (p) {
                              return {
                                      TAG: /* Bind */3,
                                      _0: semiregular(stored_triple(e)),
                                      _1: (function (c) {
                                          var c$1 = c._0;
                                          return {
                                                  TAG: /* Bind */3,
                                                  _0: buffer_ge3(e),
                                                  _1: (function (s) {
                                                      return {
                                                              TAG: /* Yield */0,
                                                              _0: {
                                                                TAG: /* Stored */1,
                                                                _0: p,
                                                                _1: c$1,
                                                                _2: s
                                                              },
                                                              _1: (function (param) {
                                                                  return /* Done */0;
                                                                })
                                                            };
                                                    })
                                                };
                                        })
                                    };
                            })
                        },
                        _1: {
                          TAG: /* Bind */3,
                          _0: buffer_ge3(e),
                          _1: (function (p) {
                              return {
                                      TAG: /* Yield */0,
                                      _0: {
                                        TAG: /* Stored_prefix */0,
                                        _0: p
                                      },
                                      _1: (function (param) {
                                          return /* Done */0;
                                        })
                                    };
                            })
                        }
                      };
              })
          };
  } else {
    return {
            TAG: /* Nest */2,
            _0: (function (param) {
                return {
                        TAG: /* Interleave */1,
                        _0: {
                          TAG: /* Bind */3,
                          _0: buffer_ge3(e),
                          _1: (function (p) {
                              return {
                                      TAG: /* Yield */0,
                                      _0: {
                                        TAG: /* Stored_prefix */0,
                                        _0: p
                                      },
                                      _1: (function (param) {
                                          return /* Done */0;
                                        })
                                    };
                            })
                        },
                        _1: {
                          TAG: /* Bind */3,
                          _0: buffer_ge3(e),
                          _1: (function (p) {
                              return {
                                      TAG: /* Bind */3,
                                      _0: semiregular(stored_triple(e)),
                                      _1: (function (c) {
                                          var c$1 = c._0;
                                          return {
                                                  TAG: /* Bind */3,
                                                  _0: buffer_ge3(e),
                                                  _1: (function (s) {
                                                      return {
                                                              TAG: /* Yield */0,
                                                              _0: {
                                                                TAG: /* Stored */1,
                                                                _0: p,
                                                                _1: c$1,
                                                                _2: s
                                                              },
                                                              _1: (function (param) {
                                                                  return /* Done */0;
                                                                })
                                                            };
                                                    })
                                                };
                                        })
                                    };
                            })
                        }
                      };
              })
          };
  }
}

function only_yellow_green(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: only_green(e),
                        _1: (function (k) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* Path */{
                                      _0: /* HOLE */0,
                                      _1: k
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Interleave */1,
                        _0: {
                          TAG: /* Bind */3,
                          _0: buffer_ge7(e),
                          _1: (function (p) {
                              return {
                                      TAG: /* Bind */3,
                                      _0: not_empty_left_green(stored_triple(e)),
                                      _1: (function (param) {
                                          var k = param._1;
                                          var c = param._0;
                                          return {
                                                  TAG: /* Bind */3,
                                                  _0: buffer_ge7(e),
                                                  _1: (function (s) {
                                                      return {
                                                              TAG: /* Yield */0,
                                                              _0: /* Path */{
                                                                _0: {
                                                                  TAG: /* Only_yellow */3,
                                                                  _0: p,
                                                                  _1: c,
                                                                  _2: s
                                                                },
                                                                _1: k
                                                              },
                                                              _1: (function (param) {
                                                                  return /* Done */0;
                                                                })
                                                            };
                                                    })
                                                };
                                        })
                                    };
                            })
                        },
                        _1: {
                          TAG: /* Bind */3,
                          _0: buffer_ge6(e),
                          _1: (function (p) {
                              return {
                                      TAG: /* Bind */3,
                                      _0: not_empty_right_green(stored_triple(e)),
                                      _1: (function (param) {
                                          var k = param._1;
                                          var c = param._0;
                                          return {
                                                  TAG: /* Bind */3,
                                                  _0: buffer_ge6(e),
                                                  _1: (function (s) {
                                                      return {
                                                              TAG: /* Yield */0,
                                                              _0: /* Path */{
                                                                _0: {
                                                                  TAG: /* Only_orange */4,
                                                                  _0: p,
                                                                  _1: c,
                                                                  _2: s
                                                                },
                                                                _1: k
                                                              },
                                                              _1: (function (param) {
                                                                  return /* Done */0;
                                                                })
                                                            };
                                                    })
                                                };
                                        })
                                    };
                            })
                        }
                      }
                    };
            })
        };
}

function gr_path_right(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: right_yellow_red(e),
                        _1: (function (y) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* GR_path */{
                                      _0: y
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Bind */3,
                        _0: right_yellow_green(e),
                        _1: (function (y) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* GR_path */{
                                      _0: y
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      }
                    };
            })
        };
}

function left_yellow_green(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: left_green(e),
                        _1: (function (k) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* Path */{
                                      _0: /* HOLE */0,
                                      _1: k
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Interleave */1,
                        _0: {
                          TAG: /* Bind */3,
                          _0: buffer_ge7(e),
                          _1: (function (p) {
                              return {
                                      TAG: /* Bind */3,
                                      _0: not_empty_left_green(stored_triple(e)),
                                      _1: (function (param) {
                                          var k = param._1;
                                          var c = param._0;
                                          return {
                                                  TAG: /* Bind */3,
                                                  _0: buffer_make(e, 2),
                                                  _1: (function (s) {
                                                      return {
                                                              TAG: /* Yield */0,
                                                              _0: /* Path */{
                                                                _0: {
                                                                  TAG: /* Left_yellow */8,
                                                                  _0: p,
                                                                  _1: c,
                                                                  _2: s
                                                                },
                                                                _1: k
                                                              },
                                                              _1: (function (param) {
                                                                  return /* Done */0;
                                                                })
                                                            };
                                                    })
                                                };
                                        })
                                    };
                            })
                        },
                        _1: {
                          TAG: /* Bind */3,
                          _0: buffer_ge6(e),
                          _1: (function (p) {
                              return {
                                      TAG: /* Bind */3,
                                      _0: not_empty_right_green(stored_triple(e)),
                                      _1: (function (param) {
                                          var k = param._1;
                                          var c = param._0;
                                          return {
                                                  TAG: /* Bind */3,
                                                  _0: buffer_make(e, 2),
                                                  _1: (function (s) {
                                                      return {
                                                              TAG: /* Yield */0,
                                                              _0: /* Path */{
                                                                _0: {
                                                                  TAG: /* Left_orange */9,
                                                                  _0: p,
                                                                  _1: c,
                                                                  _2: s
                                                                },
                                                                _1: k
                                                              },
                                                              _1: (function (param) {
                                                                  return /* Done */0;
                                                                })
                                                            };
                                                    })
                                                };
                                        })
                                    };
                            })
                        }
                      }
                    };
            })
        };
}

function right_yellow_red(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: right_red(e),
                        _1: (function (k) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* Path */{
                                      _0: /* HOLE */0,
                                      _1: k
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Interleave */1,
                        _0: {
                          TAG: /* Bind */3,
                          _0: buffer_make(e, 2),
                          _1: (function (p) {
                              return {
                                      TAG: /* Bind */3,
                                      _0: not_empty_left_red(stored_triple(e)),
                                      _1: (function (param) {
                                          var k = param._1;
                                          var c = param._0;
                                          return {
                                                  TAG: /* Bind */3,
                                                  _0: buffer_ge7(e),
                                                  _1: (function (s) {
                                                      return {
                                                              TAG: /* Yield */0,
                                                              _0: /* Path */{
                                                                _0: {
                                                                  TAG: /* Right_yellow */13,
                                                                  _0: p,
                                                                  _1: c,
                                                                  _2: s
                                                                },
                                                                _1: k
                                                              },
                                                              _1: (function (param) {
                                                                  return /* Done */0;
                                                                })
                                                            };
                                                    })
                                                };
                                        })
                                    };
                            })
                        },
                        _1: {
                          TAG: /* Bind */3,
                          _0: buffer_make(e, 2),
                          _1: (function (p) {
                              return {
                                      TAG: /* Bind */3,
                                      _0: not_empty_right_red(stored_triple(e)),
                                      _1: (function (param) {
                                          var k = param._1;
                                          var c = param._0;
                                          return {
                                                  TAG: /* Bind */3,
                                                  _0: buffer_ge6(e),
                                                  _1: (function (s) {
                                                      return {
                                                              TAG: /* Yield */0,
                                                              _0: /* Path */{
                                                                _0: {
                                                                  TAG: /* Right_orange */14,
                                                                  _0: p,
                                                                  _1: c,
                                                                  _2: s
                                                                },
                                                                _1: k
                                                              },
                                                              _1: (function (param) {
                                                                  return /* Done */0;
                                                                })
                                                            };
                                                    })
                                                };
                                        })
                                    };
                            })
                        }
                      }
                    };
            })
        };
}

function left_yellow_red(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: left_red(e),
                        _1: (function (k) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* Path */{
                                      _0: /* HOLE */0,
                                      _1: k
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Interleave */1,
                        _0: {
                          TAG: /* Bind */3,
                          _0: right_red(e),
                          _1: (function (k) {
                              return {
                                      TAG: /* Yield */0,
                                      _0: /* Path */{
                                        _0: /* HOLE */0,
                                        _1: {
                                          TAG: /* Triple_rev */0,
                                          _0: k
                                        }
                                      },
                                      _1: (function (param) {
                                          return /* Done */0;
                                        })
                                    };
                            })
                        },
                        _1: {
                          TAG: /* Interleave */1,
                          _0: {
                            TAG: /* Bind */3,
                            _0: buffer_ge7(e),
                            _1: (function (p) {
                                return {
                                        TAG: /* Bind */3,
                                        _0: not_empty_left_red(stored_triple(e)),
                                        _1: (function (param) {
                                            var k = param._1;
                                            var c = param._0;
                                            return {
                                                    TAG: /* Bind */3,
                                                    _0: buffer_make(e, 2),
                                                    _1: (function (s) {
                                                        return {
                                                                TAG: /* Yield */0,
                                                                _0: /* Path */{
                                                                  _0: {
                                                                    TAG: /* Left_yellow */8,
                                                                    _0: p,
                                                                    _1: c,
                                                                    _2: s
                                                                  },
                                                                  _1: k
                                                                },
                                                                _1: (function (param) {
                                                                    return /* Done */0;
                                                                  })
                                                              };
                                                      })
                                                  };
                                          })
                                      };
                              })
                          },
                          _1: {
                            TAG: /* Bind */3,
                            _0: buffer_ge6(e),
                            _1: (function (p) {
                                return {
                                        TAG: /* Bind */3,
                                        _0: not_empty_right_red(stored_triple(e)),
                                        _1: (function (param) {
                                            var k = param._1;
                                            var c = param._0;
                                            return {
                                                    TAG: /* Bind */3,
                                                    _0: buffer_make(e, 2),
                                                    _1: (function (s) {
                                                        return {
                                                                TAG: /* Yield */0,
                                                                _0: /* Path */{
                                                                  _0: {
                                                                    TAG: /* Left_orange */9,
                                                                    _0: p,
                                                                    _1: c,
                                                                    _2: s
                                                                  },
                                                                  _1: k
                                                                },
                                                                _1: (function (param) {
                                                                    return /* Done */0;
                                                                  })
                                                              };
                                                      })
                                                  };
                                          })
                                      };
                              })
                          }
                        }
                      }
                    };
            })
        };
}

function only_yellow_red(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: only_red(e),
                        _1: (function (k) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* Path */{
                                      _0: /* HOLE */0,
                                      _1: k
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Interleave */1,
                        _0: {
                          TAG: /* Bind */3,
                          _0: buffer_ge7(e),
                          _1: (function (p) {
                              return {
                                      TAG: /* Bind */3,
                                      _0: not_empty_left_red(stored_triple(e)),
                                      _1: (function (param) {
                                          var k = param._1;
                                          var c = param._0;
                                          return {
                                                  TAG: /* Bind */3,
                                                  _0: buffer_ge7(e),
                                                  _1: (function (s) {
                                                      return {
                                                              TAG: /* Yield */0,
                                                              _0: /* Path */{
                                                                _0: {
                                                                  TAG: /* Only_yellow */3,
                                                                  _0: p,
                                                                  _1: c,
                                                                  _2: s
                                                                },
                                                                _1: k
                                                              },
                                                              _1: (function (param) {
                                                                  return /* Done */0;
                                                                })
                                                            };
                                                    })
                                                };
                                        })
                                    };
                            })
                        },
                        _1: {
                          TAG: /* Bind */3,
                          _0: buffer_ge6(e),
                          _1: (function (p) {
                              return {
                                      TAG: /* Bind */3,
                                      _0: not_empty_right_red(stored_triple(e)),
                                      _1: (function (param) {
                                          var k = param._1;
                                          var c = param._0;
                                          return {
                                                  TAG: /* Bind */3,
                                                  _0: buffer_ge6(e),
                                                  _1: (function (s) {
                                                      return {
                                                              TAG: /* Yield */0,
                                                              _0: /* Path */{
                                                                _0: {
                                                                  TAG: /* Only_orange */4,
                                                                  _0: p,
                                                                  _1: c,
                                                                  _2: s
                                                                },
                                                                _1: k
                                                              },
                                                              _1: (function (param) {
                                                                  return /* Done */0;
                                                                })
                                                            };
                                                    })
                                                };
                                        })
                                    };
                            })
                        }
                      }
                    };
            })
        };
}

function g_path_right(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Bind */3,
                      _0: right_yellow_green(e),
                      _1: (function (y) {
                          return {
                                  TAG: /* Yield */0,
                                  _0: /* G_path */{
                                    _0: y
                                  },
                                  _1: (function (param) {
                                      return /* Done */0;
                                    })
                                };
                        })
                    };
            })
        };
}

function g_path_left(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Bind */3,
                      _0: left_yellow_green(e),
                      _1: (function (p) {
                          return {
                                  TAG: /* Yield */0,
                                  _0: /* G_path */{
                                    _0: p
                                  },
                                  _1: (function (param) {
                                      return /* Done */0;
                                    })
                                };
                        })
                    };
            })
        };
}

function gr_deque(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: gr_path_left(e),
                        _1: (function (left) {
                            var left$1 = left._0;
                            return {
                                    TAG: /* Bind */3,
                                    _0: gr_path_right(e),
                                    _1: (function (right) {
                                        return {
                                                TAG: /* Yield */0,
                                                _0: /* GR_deq */{
                                                  _0: {
                                                    TAG: /* Pair_green */1,
                                                    _0: left$1,
                                                    _1: right._0
                                                  }
                                                },
                                                _1: (function (param) {
                                                    return /* Done */0;
                                                  })
                                              };
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Interleave */1,
                        _0: {
                          TAG: /* Bind */3,
                          _0: g_path_left(e),
                          _1: (function (left) {
                              var left$1 = left._0;
                              return {
                                      TAG: /* Bind */3,
                                      _0: g_path_right(e),
                                      _1: (function (right) {
                                          return {
                                                  TAG: /* Yield */0,
                                                  _0: /* GR_deq */{
                                                    _0: {
                                                      TAG: /* Pair_red */2,
                                                      _0: left$1,
                                                      _1: right._0
                                                    }
                                                  },
                                                  _1: (function (param) {
                                                      return /* Done */0;
                                                    })
                                                };
                                        })
                                    };
                            })
                        },
                        _1: {
                          TAG: /* Bind */3,
                          _0: gr_path_only(e),
                          _1: (function (p) {
                              return {
                                      TAG: /* Yield */0,
                                      _0: /* GR_deq */{
                                        _0: {
                                          TAG: /* Only_path */0,
                                          _0: p._0
                                        }
                                      },
                                      _1: (function (param) {
                                          return /* Done */0;
                                        })
                                    };
                            })
                        }
                      }
                    };
            })
        };
}

function semiregular(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Yield */0,
                        _0: /* S */{
                          _0: /* Void */0
                        },
                        _1: (function (param) {
                            return /* Done */0;
                          })
                      },
                      _1: {
                        TAG: /* Interleave */1,
                        _0: {
                          TAG: /* Bind */3,
                          _0: gr_deque(e),
                          _1: (function (d) {
                              return {
                                      TAG: /* Yield */0,
                                      _0: /* S */{
                                        _0: {
                                          TAG: /* T */0,
                                          _0: d._0
                                        }
                                      },
                                      _1: (function (param) {
                                          return /* Done */0;
                                        })
                                    };
                            })
                        },
                        _1: {
                          TAG: /* Bind */3,
                          _0: gr_deque(e),
                          _1: (function (d) {
                              return {
                                      TAG: /* Yield */0,
                                      _0: /* S */{
                                        _0: {
                                          TAG: /* Rev */1,
                                          _0: d._0
                                        }
                                      },
                                      _1: (function (param) {
                                          return /* Done */0;
                                        })
                                    };
                            })
                        }
                      }
                    };
            })
        };
}

function not_empty_right_red(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: g_path_left(e),
                        _1: (function (left) {
                            var left$1 = left._0;
                            return {
                                    TAG: /* Bind */3,
                                    _0: right_yellow_red(e),
                                    _1: (function (param) {
                                        return {
                                                TAG: /* Yield */0,
                                                _0: /* Holy */{
                                                  _0: {
                                                    TAG: /* Pair_right */2,
                                                    _0: left$1,
                                                    _1: param._0
                                                  },
                                                  _1: param._1
                                                },
                                                _1: (function (param) {
                                                    return /* Done */0;
                                                  })
                                              };
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Interleave */1,
                        _0: {
                          TAG: /* Bind */3,
                          _0: left_yellow_red(e),
                          _1: (function (param) {
                              var k = param._1;
                              var y = param._0;
                              return {
                                      TAG: /* Bind */3,
                                      _0: g_path_right(e),
                                      _1: (function (right) {
                                          return {
                                                  TAG: /* Yield */0,
                                                  _0: /* Holy */{
                                                    _0: {
                                                      TAG: /* Pair_right_sym */4,
                                                      _0: y,
                                                      _1: right._0
                                                    },
                                                    _1: k
                                                  },
                                                  _1: (function (param) {
                                                      return /* Done */0;
                                                    })
                                                };
                                        })
                                    };
                            })
                        },
                        _1: {
                          TAG: /* Bind */3,
                          _0: only_yellow_red(e),
                          _1: (function (param) {
                              return {
                                      TAG: /* Yield */0,
                                      _0: /* Holy */{
                                        _0: {
                                          TAG: /* Only_of */0,
                                          _0: param._0
                                        },
                                        _1: param._1
                                      },
                                      _1: (function (param) {
                                          return /* Done */0;
                                        })
                                    };
                            })
                        }
                      }
                    };
            })
        };
}

function not_empty_left_red(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: left_yellow_red(e),
                        _1: (function (param) {
                            var k = param._1;
                            var y = param._0;
                            return {
                                    TAG: /* Bind */3,
                                    _0: gr_path_right(e),
                                    _1: (function (right) {
                                        return {
                                                TAG: /* Yield */0,
                                                _0: /* Holy */{
                                                  _0: {
                                                    TAG: /* Pair_left */1,
                                                    _0: y,
                                                    _1: right._0
                                                  },
                                                  _1: k
                                                },
                                                _1: (function (param) {
                                                    return /* Done */0;
                                                  })
                                              };
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Interleave */1,
                        _0: {
                          TAG: /* Bind */3,
                          _0: g_path_left(e),
                          _1: (function (left) {
                              var left$1 = left._0;
                              return {
                                      TAG: /* Bind */3,
                                      _0: right_yellow_red(e),
                                      _1: (function (param) {
                                          return {
                                                  TAG: /* Yield */0,
                                                  _0: /* Holy */{
                                                    _0: {
                                                      TAG: /* Pair_left_sym */3,
                                                      _0: left$1,
                                                      _1: param._0
                                                    },
                                                    _1: param._1
                                                  },
                                                  _1: (function (param) {
                                                      return /* Done */0;
                                                    })
                                                };
                                        })
                                    };
                            })
                        },
                        _1: {
                          TAG: /* Bind */3,
                          _0: only_yellow_red(e),
                          _1: (function (param) {
                              return {
                                      TAG: /* Yield */0,
                                      _0: /* Holy */{
                                        _0: {
                                          TAG: /* Only_of */0,
                                          _0: param._0
                                        },
                                        _1: param._1
                                      },
                                      _1: (function (param) {
                                          return /* Done */0;
                                        })
                                    };
                            })
                        }
                      }
                    };
            })
        };
}

function right_red(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Bind */3,
                      _0: buffer_make(e, 2),
                      _1: (function (p) {
                          return {
                                  TAG: /* Bind */3,
                                  _0: g_deque(stored_triple(e)),
                                  _1: (function (c) {
                                      var c$1 = c._0;
                                      return {
                                              TAG: /* Bind */3,
                                              _0: buffer_ge5(e),
                                              _1: (function (s) {
                                                  return {
                                                          TAG: /* Yield */0,
                                                          _0: {
                                                            TAG: /* Right_red */15,
                                                            _0: p,
                                                            _1: c$1,
                                                            _2: s
                                                          },
                                                          _1: (function (param) {
                                                              return /* Done */0;
                                                            })
                                                        };
                                                })
                                            };
                                    })
                                };
                        })
                    };
            })
        };
}

function g_deque(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: g_path_only(e),
                        _1: (function (p) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* G_deq */{
                                      _0: {
                                        TAG: /* Only_path */0,
                                        _0: p._0
                                      }
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Bind */3,
                        _0: g_path_left(e),
                        _1: (function (left) {
                            var left$1 = left._0;
                            return {
                                    TAG: /* Bind */3,
                                    _0: g_path_right(e),
                                    _1: (function (right) {
                                        return {
                                                TAG: /* Yield */0,
                                                _0: /* G_deq */{
                                                  _0: {
                                                    TAG: /* Pair_red */2,
                                                    _0: left$1,
                                                    _1: right._0
                                                  }
                                                },
                                                _1: (function (param) {
                                                    return /* Done */0;
                                                  })
                                              };
                                      })
                                  };
                          })
                      }
                    };
            })
        };
}

function right_yellow_green(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: right_green(e),
                        _1: (function (k) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* Path */{
                                      _0: /* HOLE */0,
                                      _1: k
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Interleave */1,
                        _0: {
                          TAG: /* Bind */3,
                          _0: buffer_make(e, 2),
                          _1: (function (p) {
                              return {
                                      TAG: /* Bind */3,
                                      _0: not_empty_left_green(stored_triple(e)),
                                      _1: (function (param) {
                                          var k = param._1;
                                          var c = param._0;
                                          return {
                                                  TAG: /* Bind */3,
                                                  _0: buffer_ge7(e),
                                                  _1: (function (s) {
                                                      return {
                                                              TAG: /* Yield */0,
                                                              _0: /* Path */{
                                                                _0: {
                                                                  TAG: /* Right_yellow */13,
                                                                  _0: p,
                                                                  _1: c,
                                                                  _2: s
                                                                },
                                                                _1: k
                                                              },
                                                              _1: (function (param) {
                                                                  return /* Done */0;
                                                                })
                                                            };
                                                    })
                                                };
                                        })
                                    };
                            })
                        },
                        _1: {
                          TAG: /* Bind */3,
                          _0: buffer_make(e, 2),
                          _1: (function (p) {
                              return {
                                      TAG: /* Bind */3,
                                      _0: not_empty_right_green(stored_triple(e)),
                                      _1: (function (param) {
                                          var k = param._1;
                                          var c = param._0;
                                          return {
                                                  TAG: /* Bind */3,
                                                  _0: buffer_ge6(e),
                                                  _1: (function (s) {
                                                      return {
                                                              TAG: /* Yield */0,
                                                              _0: /* Path */{
                                                                _0: {
                                                                  TAG: /* Right_orange */14,
                                                                  _0: p,
                                                                  _1: c,
                                                                  _2: s
                                                                },
                                                                _1: k
                                                              },
                                                              _1: (function (param) {
                                                                  return /* Done */0;
                                                                })
                                                            };
                                                    })
                                                };
                                        })
                                    };
                            })
                        }
                      }
                    };
            })
        };
}

function not_empty_left_green(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: only_yellow_green(e),
                        _1: (function (param) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* Holy */{
                                      _0: {
                                        TAG: /* Only_of */0,
                                        _0: param._0
                                      },
                                      _1: param._1
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Bind */3,
                        _0: left_yellow_green(e),
                        _1: (function (param) {
                            var k = param._1;
                            var y = param._0;
                            return {
                                    TAG: /* Bind */3,
                                    _0: gr_path_right(e),
                                    _1: (function (right) {
                                        return {
                                                TAG: /* Yield */0,
                                                _0: /* Holy */{
                                                  _0: {
                                                    TAG: /* Pair_left */1,
                                                    _0: y,
                                                    _1: right._0
                                                  },
                                                  _1: k
                                                },
                                                _1: (function (param) {
                                                    return /* Done */0;
                                                  })
                                              };
                                      })
                                  };
                          })
                      }
                    };
            })
        };
}

function not_empty_right_green(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: only_yellow_green(e),
                        _1: (function (param) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* Holy */{
                                      _0: {
                                        TAG: /* Only_of */0,
                                        _0: param._0
                                      },
                                      _1: param._1
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Bind */3,
                        _0: g_path_left(e),
                        _1: (function (left) {
                            var left$1 = left._0;
                            return {
                                    TAG: /* Bind */3,
                                    _0: right_yellow_green(e),
                                    _1: (function (param) {
                                        return {
                                                TAG: /* Yield */0,
                                                _0: /* Holy */{
                                                  _0: {
                                                    TAG: /* Pair_right */2,
                                                    _0: left$1,
                                                    _1: param._0
                                                  },
                                                  _1: param._1
                                                },
                                                _1: (function (param) {
                                                    return /* Done */0;
                                                  })
                                              };
                                      })
                                  };
                          })
                      }
                    };
            })
        };
}

function left_green(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: buffer_ge5(e),
                        _1: (function (p) {
                            return {
                                    TAG: /* Bind */3,
                                    _0: buffer_make(e, 2),
                                    _1: (function (s) {
                                        return {
                                                TAG: /* Yield */0,
                                                _0: {
                                                  TAG: /* Left_small */6,
                                                  _0: p,
                                                  _1: s
                                                },
                                                _1: (function (param) {
                                                    return /* Done */0;
                                                  })
                                              };
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Bind */3,
                        _0: buffer_ge8(e),
                        _1: (function (p) {
                            return {
                                    TAG: /* Bind */3,
                                    _0: gr_deque(stored_triple(e)),
                                    _1: (function (c) {
                                        var c$1 = c._0;
                                        return {
                                                TAG: /* Bind */3,
                                                _0: buffer_make(e, 2),
                                                _1: (function (s) {
                                                    return {
                                                            TAG: /* Yield */0,
                                                            _0: {
                                                              TAG: /* Left_green */7,
                                                              _0: p,
                                                              _1: c$1,
                                                              _2: s
                                                            },
                                                            _1: (function (param) {
                                                                return /* Done */0;
                                                              })
                                                          };
                                                  })
                                              };
                                      })
                                  };
                          })
                      }
                    };
            })
        };
}

function g_path_only(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Bind */3,
                      _0: only_yellow_green(e),
                      _1: (function (y) {
                          return {
                                  TAG: /* Yield */0,
                                  _0: /* G_path */{
                                    _0: y
                                  },
                                  _1: (function (param) {
                                      return /* Done */0;
                                    })
                                };
                        })
                    };
            })
        };
}

function only_green(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: buffer_ge1(e),
                        _1: (function (p) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: {
                                      TAG: /* Only_prefix */1,
                                      _0: p
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Bind */3,
                        _0: buffer_ge8(e),
                        _1: (function (p) {
                            return {
                                    TAG: /* Bind */3,
                                    _0: gr_deque(stored_triple(e)),
                                    _1: (function (c) {
                                        var c$1 = c._0;
                                        return {
                                                TAG: /* Bind */3,
                                                _0: buffer_ge8(e),
                                                _1: (function (s) {
                                                    return {
                                                            TAG: /* Yield */0,
                                                            _0: {
                                                              TAG: /* Only_green */2,
                                                              _0: p,
                                                              _1: c$1,
                                                              _2: s
                                                            },
                                                            _1: (function (param) {
                                                                return /* Done */0;
                                                              })
                                                          };
                                                  })
                                              };
                                      })
                                  };
                          })
                      }
                    };
            })
        };
}

function only_red(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Bind */3,
                      _0: buffer_ge5(e),
                      _1: (function (p) {
                          return {
                                  TAG: /* Bind */3,
                                  _0: g_deque(stored_triple(e)),
                                  _1: (function (c) {
                                      var c$1 = c._0;
                                      return {
                                              TAG: /* Bind */3,
                                              _0: buffer_ge5(e),
                                              _1: (function (s) {
                                                  return {
                                                          TAG: /* Yield */0,
                                                          _0: {
                                                            TAG: /* Only_red */5,
                                                            _0: p,
                                                            _1: c$1,
                                                            _2: s
                                                          },
                                                          _1: (function (param) {
                                                              return /* Done */0;
                                                            })
                                                        };
                                                })
                                            };
                                    })
                                };
                        })
                    };
            })
        };
}

function left_red(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Bind */3,
                      _0: buffer_ge5(e),
                      _1: (function (p) {
                          return {
                                  TAG: /* Bind */3,
                                  _0: g_deque(stored_triple(e)),
                                  _1: (function (c) {
                                      var c$1 = c._0;
                                      return {
                                              TAG: /* Bind */3,
                                              _0: buffer_make(e, 2),
                                              _1: (function (s) {
                                                  return {
                                                          TAG: /* Yield */0,
                                                          _0: {
                                                            TAG: /* Left_red */10,
                                                            _0: p,
                                                            _1: c$1,
                                                            _2: s
                                                          },
                                                          _1: (function (param) {
                                                              return /* Done */0;
                                                            })
                                                        };
                                                })
                                            };
                                    })
                                };
                        })
                    };
            })
        };
}

function gr_path_left(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: left_yellow_red(e),
                        _1: (function (p) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* GR_path */{
                                      _0: p
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Bind */3,
                        _0: left_yellow_green(e),
                        _1: (function (p) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* GR_path */{
                                      _0: p
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      }
                    };
            })
        };
}

function gr_path_only(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: only_yellow_red(e),
                        _1: (function (param) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* GR_path */{
                                      _0: /* Path */{
                                        _0: param._0,
                                        _1: param._1
                                      }
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Bind */3,
                        _0: only_yellow_green(e),
                        _1: (function (param) {
                            return {
                                    TAG: /* Yield */0,
                                    _0: /* GR_path */{
                                      _0: /* Path */{
                                        _0: param._0,
                                        _1: param._1
                                      }
                                    },
                                    _1: (function (param) {
                                        return /* Done */0;
                                      })
                                  };
                          })
                      }
                    };
            })
        };
}

function right_green(e) {
  return {
          TAG: /* Nest */2,
          _0: (function (param) {
              return {
                      TAG: /* Interleave */1,
                      _0: {
                        TAG: /* Bind */3,
                        _0: buffer_make(e, 2),
                        _1: (function (p) {
                            return {
                                    TAG: /* Bind */3,
                                    _0: buffer_ge5(e),
                                    _1: (function (s) {
                                        return {
                                                TAG: /* Yield */0,
                                                _0: {
                                                  TAG: /* Right_small */11,
                                                  _0: p,
                                                  _1: s
                                                },
                                                _1: (function (param) {
                                                    return /* Done */0;
                                                  })
                                              };
                                      })
                                  };
                          })
                      },
                      _1: {
                        TAG: /* Bind */3,
                        _0: buffer_make(e, 2),
                        _1: (function (p) {
                            return {
                                    TAG: /* Bind */3,
                                    _0: gr_deque(stored_triple(e)),
                                    _1: (function (c) {
                                        var c$1 = c._0;
                                        return {
                                                TAG: /* Bind */3,
                                                _0: buffer_ge8(e),
                                                _1: (function (s) {
                                                    return {
                                                            TAG: /* Yield */0,
                                                            _0: {
                                                              TAG: /* Right_green */12,
                                                              _0: p,
                                                              _1: c$1,
                                                              _2: s
                                                            },
                                                            _1: (function (param) {
                                                                return /* Done */0;
                                                              })
                                                          };
                                                  })
                                              };
                                      })
                                  };
                          })
                      }
                    };
            })
        };
}

function regular(e) {
  return {
          TAG: /* Interleave */1,
          _0: {
            TAG: /* Yield */0,
            _0: /* Regular */{
              _0: /* Void */0
            },
            _1: (function (param) {
                return /* Done */0;
              })
          },
          _1: {
            TAG: /* Bind */3,
            _0: g_deque(e),
            _1: (function (d) {
                return {
                        TAG: /* Yield */0,
                        _0: /* Regular */{
                          _0: {
                            TAG: /* T */0,
                            _0: d._0
                          }
                        },
                        _1: (function (param) {
                            return /* Done */0;
                          })
                      };
              })
          }
        };
}

var counter = {
  contents: 0
};

function elt(param) {
  var v = counter.contents;
  counter.contents = v + 1 | 0;
  return v;
}

var gen_elt = {
  TAG: /* Delay */4,
  _0: (function (param) {
      var x = elt(undefined);
      return {
              TAG: /* Yield */0,
              _0: x,
              _1: (function (param) {
                  return /* Done */0;
                })
            };
    })
};

var all_semi = semiregular(gen_elt);

var all = regular(gen_elt);

function list_uncons(param) {
  if (param) {
    return [
            param.hd,
            param.tl
          ];
  }
  
}

function list_unsnoc(xs) {
  var _acc = /* [] */0;
  var _param = xs;
  while(true) {
    var param = _param;
    var acc = _acc;
    if (!param) {
      return ;
    }
    var xs$1 = param.tl;
    var x = param.hd;
    if (!xs$1) {
      return [
              List.rev(acc),
              x
            ];
    }
    _param = xs$1;
    _acc = {
      hd: x,
      tl: acc
    };
    continue ;
  };
}

function option_eq(eq, x, y) {
  if (x !== undefined) {
    if (y !== undefined) {
      return Curry._2(eq, Caml_option.valFromOption(x), Caml_option.valFromOption(y));
    } else {
      return false;
    }
  } else {
    return y === undefined;
  }
}

function uncons_to_list(deq) {
  var _acc = /* [] */0;
  var _deq = deq;
  while(true) {
    var deq$1 = _deq;
    var acc = _acc;
    var match = Deckrev_internal.uncons(deq$1);
    if (match === undefined) {
      return List.rev(acc);
    }
    _deq = match[1];
    _acc = {
      hd: match[0],
      tl: acc
    };
    continue ;
  };
}

function unsnoc_to_list(deq) {
  var _acc = /* [] */0;
  var _deq = deq;
  while(true) {
    var deq$1 = _deq;
    var acc = _acc;
    var match = Deckrev_internal.unsnoc(deq$1);
    if (match === undefined) {
      return acc;
    }
    _deq = match[0];
    _acc = {
      hd: match[1],
      tl: acc
    };
    continue ;
  };
}

function un_to_list(d) {
  var _left = /* [] */0;
  var _right = /* [] */0;
  var _deq = d;
  while(true) {
    var deq = _deq;
    var right = _right;
    var left = _left;
    if (Random.bool(undefined)) {
      var match = Deckrev_internal.uncons(deq);
      if (match === undefined) {
        return List.concat({
                    hd: List.rev(left),
                    tl: {
                      hd: right,
                      tl: /* [] */0
                    }
                  });
      }
      _deq = match[1];
      _left = {
        hd: match[0],
        tl: left
      };
      continue ;
    }
    var match$1 = Deckrev_internal.unsnoc(deq);
    if (match$1 === undefined) {
      return List.concat({
                  hd: List.rev(left),
                  tl: {
                    hd: right,
                    tl: /* [] */0
                  }
                });
    }
    _deq = match$1[0];
    _right = {
      hd: match$1[1],
      tl: right
    };
    continue ;
  };
}

function fold_left_to_list(t) {
  return List.rev(Deque.Deckrev.fold_left((function (xs, x) {
                    return {
                            hd: x,
                            tl: xs
                          };
                  }), /* [] */0, t));
}

function test(param, deq) {
  var real_deq = Deckrev_internal.regular_of_semi(deq);
  var lst = uncons_to_list(real_deq);
  if (!Caml_obj.caml_equal(lst, Curry._1(Deque.Deckrev.to_list, real_deq))) {
    throw {
          RE_EXN_ID: "Assert_failure",
          _1: [
            "deckrev_test.re",
            885,
            2
          ],
          Error: new Error()
        };
  }
  if (!Caml_obj.caml_equal(lst, fold_left_to_list(real_deq))) {
    throw {
          RE_EXN_ID: "Assert_failure",
          _1: [
            "deckrev_test.re",
            886,
            2
          ],
          Error: new Error()
        };
  }
  var x = elt(undefined);
  if (!Caml_obj.caml_equal(uncons_to_list(Deckrev_internal.cons(x, real_deq)), {
          hd: x,
          tl: lst
        })) {
    throw {
          RE_EXN_ID: "Assert_failure",
          _1: [
            "deckrev_test.re",
            888,
            2
          ],
          Error: new Error()
        };
  }
  if (!Caml_obj.caml_equal(uncons_to_list(Deckrev_internal.snoc(real_deq, x)), List.concat({
              hd: lst,
              tl: {
                hd: {
                  hd: x,
                  tl: /* [] */0
                },
                tl: /* [] */0
              }
            }))) {
    throw {
          RE_EXN_ID: "Assert_failure",
          _1: [
            "deckrev_test.re",
            889,
            2
          ],
          Error: new Error()
        };
  }
  if (!Caml_obj.caml_equal(lst, un_to_list(real_deq))) {
    throw {
          RE_EXN_ID: "Assert_failure",
          _1: [
            "deckrev_test.re",
            890,
            2
          ],
          Error: new Error()
        };
  }
  return iteri$1((function (j, deq$prime) {
                var real_deq$prime = Deckrev_internal.regular_of_semi(deq$prime);
                var lst$prime = uncons_to_list(real_deq$prime);
                if (!Caml_obj.caml_equal(uncons_to_list(Deckrev_internal.concat(real_deq, real_deq$prime)), List.concat({
                            hd: lst,
                            tl: {
                              hd: lst$prime,
                              tl: /* [] */0
                            }
                          }))) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "deckrev_test.re",
                          895,
                          6
                        ],
                        Error: new Error()
                      };
                }
                var d1 = Deckrev_internal.concat_semi(deq, deq$prime);
                var d2 = Deckrev_internal.concat_semi(deq$prime, deq);
                var real_deq$1 = Deckrev_internal.regular_of_semi(d1);
                var dlst = uncons_to_list(real_deq$1);
                if (!Caml_obj.caml_equal(dlst, un_to_list(real_deq$1))) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "deckrev_test.re",
                          902,
                          6
                        ],
                        Error: new Error()
                      };
                }
                var real_deq$2 = Deckrev_internal.regular_of_semi(d2);
                var dlst$1 = uncons_to_list(real_deq$2);
                if (!Caml_obj.caml_equal(dlst$1, un_to_list(real_deq$2))) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "deckrev_test.re",
                          905,
                          6
                        ],
                        Error: new Error()
                      };
                }
                return j;
              }), 2, all_semi);
}

iteri$1(test, 6, all_semi);

var D;

var max_depth = 6;

var to_list = uncons_to_list;

exports.$at = $at;
exports.$$return = $$return;
exports.$great$great$eq = $great$great$eq;
exports.map = map;
exports.$less$$great = $less$$great;
exports.$less$star$great = $less$star$great;
exports.of_list = of_list;
exports.force1 = force1;
exports.iteri = iteri$1;
exports.D = D;
exports.list_gen = list_gen;
exports.buffer_make = buffer_make;
exports.sample = sample;
exports.buffer_ge8 = buffer_ge8;
exports.buffer_ge7 = buffer_ge7;
exports.buffer_ge6 = buffer_ge6;
exports.buffer_ge5 = buffer_ge5;
exports.buffer_ge3 = buffer_ge3;
exports.buffer_eq2 = buffer_eq2;
exports.buffer_ge1 = buffer_ge1;
exports.stored_triple = stored_triple;
exports.only_green = only_green;
exports.only_red = only_red;
exports.only_yellow_green = only_yellow_green;
exports.only_yellow_red = only_yellow_red;
exports.left_yellow_green = left_yellow_green;
exports.right_yellow_green = right_yellow_green;
exports.left_yellow_red = left_yellow_red;
exports.right_yellow_red = right_yellow_red;
exports.not_empty_left_red = not_empty_left_red;
exports.not_empty_right_red = not_empty_right_red;
exports.not_empty_left_green = not_empty_left_green;
exports.not_empty_right_green = not_empty_right_green;
exports.left_green = left_green;
exports.left_red = left_red;
exports.right_green = right_green;
exports.right_red = right_red;
exports.g_deque = g_deque;
exports.gr_deque = gr_deque;
exports.gr_path_only = gr_path_only;
exports.gr_path_left = gr_path_left;
exports.gr_path_right = gr_path_right;
exports.g_path_only = g_path_only;
exports.g_path_left = g_path_left;
exports.g_path_right = g_path_right;
exports.semiregular = semiregular;
exports.regular = regular;
exports.counter = counter;
exports.elt = elt;
exports.gen_elt = gen_elt;
exports.all_semi = all_semi;
exports.all = all;
exports.list_uncons = list_uncons;
exports.list_unsnoc = list_unsnoc;
exports.option_eq = option_eq;
exports.max_depth = max_depth;
exports.uncons_to_list = uncons_to_list;
exports.to_list = to_list;
exports.unsnoc_to_list = unsnoc_to_list;
exports.un_to_list = un_to_list;
exports.fold_left_to_list = fold_left_to_list;
exports.test = test;
/* all_semi Not a pure module */
